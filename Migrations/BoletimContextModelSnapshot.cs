// <auto-generated />
using BoletimAPI.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoletimAPI.Migrations
{
    [DbContext(typeof(BoletimContext))]
    partial class BoletimContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoletimAPI.Entities.Aluno", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("BoletimAPI.Entities.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.Property<int>("Prova2")
                        .HasColumnType("int");

                    b.Property<int>("Teste1")
                        .HasColumnType("int");

                    b.Property<int>("Teste2")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunoDisciplinas");
                });

            modelBuilder.Entity("BoletimAPI.Entities.Disciplina", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("BoletimAPI.Entities.Professor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("DisciplinaProfessor", b =>
                {
                    b.Property<int>("Disciplinasid")
                        .HasColumnType("int");

                    b.Property<int>("Professoresid")
                        .HasColumnType("int");

                    b.HasKey("Disciplinasid", "Professoresid");

                    b.HasIndex("Professoresid");

                    b.ToTable("DisciplinaProfessor");
                });

            modelBuilder.Entity("BoletimAPI.Entities.AlunoDisciplina", b =>
                {
                    b.HasOne("BoletimAPI.Entities.Aluno", "Aluno")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoletimAPI.Entities.Disciplina", "Disciplina")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("DisciplinaProfessor", b =>
                {
                    b.HasOne("BoletimAPI.Entities.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("Disciplinasid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoletimAPI.Entities.Professor", null)
                        .WithMany()
                        .HasForeignKey("Professoresid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BoletimAPI.Entities.Aluno", b =>
                {
                    b.Navigation("AlunoDisciplinas");
                });

            modelBuilder.Entity("BoletimAPI.Entities.Disciplina", b =>
                {
                    b.Navigation("AlunoDisciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
